<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Red Hat Openshift Service on AWS on Managed OpenShift Black Belt - Unofficial Documentation</title><link>https://mobb.ninja/docs/rosa/</link><description>Recent content in Red Hat Openshift Service on AWS on Managed OpenShift Black Belt - Unofficial Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 14 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://mobb.ninja/docs/rosa/index.xml" rel="self" type="application/rss+xml"/><item><title>AWS Load Balancer Operator On ROSA</title><link>https://mobb.ninja/docs/rosa/aws-load-balancer-operator/</link><pubDate>Tue, 03 Jan 2023 22:07:08 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/aws-load-balancer-operator/</guid><description>Author Shaozhen Ding, Paul Czarkowski
last edited: 01/05/2023
AWS Load Balancer Controller is a controller to help manage Elastic Load Balancers for a Kubernetes cluster.
It satisfies Kubernetes Ingress resources by provisioning Application Load Balancers. It satisfies Kubernetes Service resources by provisioning Network Load Balancers. Compared with default AWS In Tree Provider, this controller is actively developed with advanced annotations for both ALB and NLB. Some advanced usecases are:
Using native kubernetes ingress with ALB Integrate ALB with WAF Specify NLB source IP ranges Specify NLB internal IP address AWS Load Balancer Operator is used to used to install, manage and configure an instance of aws-load-balancer-controller in a OpenShift cluster.</description></item><item><title>Configuring a ROSA cluster to pull images from AWS Elastic Container Registry (ECR)</title><link>https://mobb.ninja/docs/rosa/ecr/</link><pubDate>Wed, 14 Sep 2022 22:07:09 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/ecr/</guid><description>Prerequisites AWS CLI Openshift CLI 4.8+ Docker Background Quick Introduction by Ryan Niksch &amp;amp; Charlotte Fung on YouTube.
There are two options to use to authenticate wth Amazon ECR to pull images.
The traditional method is to create a pull secret for ecr.
Example:
oc create secret docker-registry ecr-pull-secret \ --docker-server=&amp;lt;registry id&amp;gt;.dkr.ecr.&amp;lt;region&amp;gt;.amazonaws.com \ --docker-username=AWS --docker-password=$(aws ecr get-login-password) \ --namespace=hello-world However Amazon ECR tokens expire every 12 hours which will mean you will need to re-authenticate every 12 hours either through scripting or do so manually.</description></item><item><title>Creating a Public/Private BYO VPC for ROSA</title><link>https://mobb.ninja/docs/rosa/byo-vpc/</link><pubDate>Wed, 14 Sep 2022 22:07:09 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/byo-vpc/</guid><description>Creating a Public/Private BYO VPC for ROSA This is example Terraform to create a single AZ VPC in which to deploy a single AZ ROSA cluster. This is intended to be used as a guide to get started quickly, not to be used in production.
Pre-Requisites Terraform Deploy Download this repo
git clone https://github.com/rh-mobb/documentation.git cd documentation/docs/rosa/byo-vpc Modify main.tf as needed, then run
terraform init terraform plan terraform apply Cleanup To destroy resources terraform destroy</description></item><item><title>Creating a ROSA cluster in STS mode with custom KMS key</title><link>https://mobb.ninja/docs/rosa/kms/</link><pubDate>Wed, 14 Sep 2022 22:07:09 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/kms/</guid><description>Byron Miller
Last updated 4/21/2022
Tip Official Documentation ROSA STS with custom KMS key
This guide will walk you through installing ROSA (Red Hat OpenShift Service on AWS) with a customer-provided KMS key that will be used to encrypt both the root volumes of nodes as well as persistent volumes for mounted EBS claims.
Prerequisites AWS CLI ROSA CLI v1.1.11 or higher OpenShift CLI - rosa download openshift-client Prepare AWS Account for ROSA Configure the AWS CLI by running the following command</description></item><item><title>Custom Alerts in ROSA 4.11.x</title><link>https://mobb.ninja/docs/rosa/custom-alertmanager/</link><pubDate>Wed, 14 Sep 2022 22:07:09 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/custom-alertmanager/</guid><description>Starting with OpenShift 4.11 it is possible to manage alerting rules for user-defined projects. Similarly, in ROSA clusters the OpenShift Administrator can enable a second AlertManager instance in the user workload monitoring namespace which can be used to create such alerts.
Note: Currently this is not a managed feature of ROSA. Such an implementation may get overwritten if the User Workload Monitoring functionality is toggled using the OpenShift Cluster Manager (OCM).</description></item><item><title>ECR Secret Operator</title><link>https://mobb.ninja/docs/rosa/ecr-secret-operator/</link><pubDate>Wed, 14 Sep 2022 22:07:09 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/ecr-secret-operator/</guid><description>Amazon Elastic Container Registry Private Registry Authentication provides a temporary token that is valid only for 12 hours. It is a challenge for automating container image build process to refresh the token or secret in a timely manner.
This operators frequently talks with AWS ECR GetAuthroization Token and create/update the secret, so that the service account can perform docker image build.
How to use this operator Prerequisites Create an ECR private repository Provide AWS Authentication to the operator.</description></item><item><title>Enabling the AWS EFS CSI Driver Operator on ROSA</title><link>https://mobb.ninja/docs/rosa/aws-efs-csi-operator-sts/</link><pubDate>Wed, 14 Sep 2022 22:07:09 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/aws-efs-csi-operator-sts/</guid><description>Author: Paul Czarkowski Modified: 07/11/2022
The Amazon Web Services Elastic File System (AWS EFS) is a Network File System (NFS) that can be provisioned on Red Hat OpenShift Service on AWS clusters. With the release of OpenShift 4.10 the EFS CSI Driver is now GA and available.
This is a guide to quickly enable the EFS Operator on ROSA to a Red Hat OpenShift on AWS (ROSA) cluster with STS enabled.</description></item><item><title>Examples of using a WAF in front of ROSA / OSD on AWS / OCP on AWS</title><link>https://mobb.ninja/docs/rosa/waf/</link><pubDate>Wed, 14 Sep 2022 22:07:09 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/waf/</guid><description>Problem Statement Operator requires WAF (Web Application Firewall) in front of their workloads running on OpenShift (ROSA)
Operator does not want WAF running on OpenShift to ensure that OCP resources do not experience Denial of Service through handling the WAF
Quick Introduction by Paul Czarkowski &amp;amp; Ryan Niksch on YouTube
Solutions Cloud Front -&amp;gt; WAF -&amp;gt; CustomDomain -&amp;gt; $APP This is the preferred method and can also work with most third party WAF systems that act as a reverse proxy</description></item><item><title>Extending ROSA STS to include authentication with AWS Services</title><link>https://mobb.ninja/docs/rosa/using-sts-with-aws-services/</link><pubDate>Wed, 14 Sep 2022 22:07:09 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/using-sts-with-aws-services/</guid><description>Extending ROSA STS to include authentication with AWS Services In this example we will deploy the Amazon Ingress Controller that uses ALBs, and configure it to use STS authentication.
Deployment Configure STS Make sure your cluster has the pod identity webhook
kubectl get mutatingwebhookconfigurations.admissionregistration.k8s.io pod-identity-webhook Download the IAM Policy for the AWS Load Balancer Hooks
wget https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.2.0/docs/install/iam_policy.json Create AWS Role with inline policy
aws iam create-role \ --role-name AWSLoadBalancerController --query Policy.</description></item><item><title>Federating Metrics to a centralized Prometheus Cluster</title><link>https://mobb.ninja/docs/rosa/federated-metrics-prometheus/</link><pubDate>Wed, 14 Sep 2022 22:07:09 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/federated-metrics-prometheus/</guid><description>Red Hat Openshift for AWS (ROSA) comes with two built-in monitoring stacks. ClusterMonitoring and User Workload Monitoring. They are both based on Prometheus, the first targets the Cluster Operator (Red Hat SRE) and the latter targets the Cluster user (you!).
Both provide amazing metrics insights inside the Cluster&amp;rsquo;s web console, showing overall cluster metrics as well as namespace specific workload metrics, all integrated with your configured IDP.
However the Alert Manager instance is locked down and used to send alerts to the Red Hat SRE team.</description></item><item><title>Integrating with AWS resources using Pod Identity</title><link>https://mobb.ninja/docs/rosa/sts-and-pod-identity/</link><pubDate>Wed, 14 Sep 2022 22:07:09 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/sts-and-pod-identity/</guid><description>Integrating with AWS resources using Pod Identity Prerequisites ROSA CLI AWS CLI ROSA Cluster with STS</description></item><item><title>ROSA - Federating Metrics to AWS Prometheus</title><link>https://mobb.ninja/docs/rosa/cluster-metrics-to-aws-prometheus/</link><pubDate>Wed, 14 Sep 2022 22:07:09 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/cluster-metrics-to-aws-prometheus/</guid><description>Federating Metrics from ROSA/OSD is a bit tricky as the cluster metrics require pulling from its /federated endpoint while the user workload metrics require using the prometheus remoteWrite configuration.
This guide will walk you through using the MOBB Helm Chart to deploy the necessary agents to federate the metrics into AWS Prometheus and then use Grafana to visualize those metrics.
As a bonus it will set up a CloudWatch datasource to view any metrics or logs you have in Cloud Watch.</description></item><item><title>Using AWS Secrets Manager CSI on Red Hat OpenShift on AWS with STS</title><link>https://mobb.ninja/docs/rosa/aws-secrets-manager-csi/</link><pubDate>Wed, 14 Sep 2022 22:07:09 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/aws-secrets-manager-csi/</guid><description>Author Paul Czarkowski
last modified 2021-08-17
The AWS Secrets and Configuration Provider (ASCP) provides a way to expose AWS Secrets as Kubernetes storage volumes. With the ASCP, you can store and manage your secrets in Secrets Manager and then retrieve them through your workloads running on ROSA or OSD.
This is made even easier / more secure through the use of AWS STS and Kubernetes PodIdentity.
Prerequisites A ROSA cluster deployed with STS Helm 3 aws CLI jq Preparing Environment Validate that your cluster has STS</description></item><item><title>Using the AWS Cloud Watch agent to publish metrics to CloudWatch in ROSA</title><link>https://mobb.ninja/docs/rosa/metrics-to-cloudwatch-agent/</link><pubDate>Wed, 14 Sep 2022 22:07:09 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/metrics-to-cloudwatch-agent/</guid><description>This document shows how you can use the AWS Cloud Watch agent to scrape Prometheus endpoints and publish metrics to CloudWatch in a Red Hat OpenShift Container Platform (ROSA) cluster.
It pulls from The AWS documentation for installing the CloudWatch agent to Kubernetes and collections and publishes metrics for the Kubernetes API Server and provides a simple Dashboard to view the results.
Currently the AWS Cloud Watch Agent does not support pulling all metrics from the Prometheus federated endpoint, but the hope is that when it does we can ship all Cluster and User Workload metrics to CloudWatch.</description></item><item><title>Work Around to fix the issue with the logging-addon on ROSA STS Clusters</title><link>https://mobb.ninja/docs/rosa/sts-cluster-logging-addon/</link><pubDate>Wed, 14 Sep 2022 22:07:09 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/sts-cluster-logging-addon/</guid><description>Currently, the logging-addon is not working on ROSA STS clusters. This is due to permissions missing from the Operator itself. This is a work around to provide credentials to the addon.
Note: Please see the official Red Hat KCS for more information.
Prerequisites An STS based ROSA Cluster Workaround Uninstall the logging-addon from the cluster
rosa uninstall addon -c &amp;lt;mycluster&amp;gt; cluster-logging-operator -y Create a IAM Trust Policy document
cat &amp;lt;&amp;lt; EOF &amp;gt; /tmp/trust-policy.</description></item><item><title>Configuring the Cluster Log Forwarder for CloudWatch Logs and STS</title><link>https://mobb.ninja/docs/rosa/clf-cloudwatch-sts/</link><pubDate>Wed, 14 Sep 2022 22:07:08 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/clf-cloudwatch-sts/</guid><description>Author: Paul Czarkowski
last edited: 2023-01-04
This guide shows how to deploy the Cluster Log Forwarder operator and configure it to use STS authentication to forward logs to CloudWatch.
Prerequisites A ROSA cluster (configured with STS) The jq cli command The aws cli command Environment Setup Configure the following environment variables
Change the cluster name to match your ROSA cluster and ensure you&amp;rsquo;re logged into the cluster as an Administrator. Ensure all fields are outputted correctly before moving on.</description></item><item><title>Creating a ROSA cluster in STS mode</title><link>https://mobb.ninja/docs/rosa/sts/</link><pubDate>Wed, 14 Sep 2022 22:07:08 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/sts/</guid><description>Paul Czarkowski
Last updated 05/31/2022
Tip The official documentation for installing a ROSA cluster in STS mode can be found here.
Quick Introduction by Ryan Niksch (AWS) and Shaozen Ding (Red Hat) on YouTube
STS allows us to deploy ROSA without needing a ROSA admin account, instead it uses roles and policies with Amazon STS (secure token service) to gain access to the AWS resources needed to install and operate the cluster.</description></item><item><title>Creating a ROSA cluster with Private Link enabled</title><link>https://mobb.ninja/docs/rosa/private-link/</link><pubDate>Wed, 14 Sep 2022 22:07:08 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/private-link/</guid><description>Prerequisites AWS CLI Rosa CLI v1.0.8 jq Create VPC and Subnets The following instructions use the AWS CLI to create the necessary networking to deploy a Private Link ROSA cluster into a Single AZ and are intended to be a guide. Ideally you would use an Automation tool like Ansible or Terraform to manage your VPCs.
When creating subnets, make sure that subnet(s) are created to an availability zone that has ROSA instances types available.</description></item><item><title>Creating a ROSA cluster with Private Link enabled (custom VPC) and STS</title><link>https://mobb.ninja/docs/rosa/sts-with-private-link/</link><pubDate>Wed, 14 Sep 2022 22:07:08 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/sts-with-private-link/</guid><description>Steve Mirman, Paul Czarkowski
Last updated 1/28/2022
This is a combination of the private-link and sts setup documents to show the full picture
Prerequisites AWS CLI Rosa CLI v1.1.7 jq AWS Preparation If this is a brand new AWS account that has never had a AWS Load Balancer installed in it, you should run the following
aws iam create-service-linked-role --aws-service-name \ &amp;#34;elasticloadbalancing.amazonaws.com&amp;#34; Create the AWS Virtual Private Cloud (VPC) and Subnets For this scenario, we will be using a newly created VPC with both public and private subnets.</description></item><item><title>Custom AlertManager in ROSA 4.9.x</title><link>https://mobb.ninja/docs/rosa/custom-alertmanager-4.9/</link><pubDate>Wed, 14 Sep 2022 22:07:08 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/custom-alertmanager-4.9/</guid><description>ROSA 4.9.x introduces a new way to provide custom AlertManager configuration to receive alerts from User Workload Management.
The OpenShift Administrator can use the Prometheus Operator to create a custom AlertManager resource and then use the AlertManagerConfig resource to configure User Workload Monitoring to use the custom AlertManager.
Prerequisites AWS CLI A Red Hat OpenShift for AWS (ROSA) cluster 4.9.0 or higher Create Environment Variables Before we get started we need to set some environment variables to be used throughout the guide.</description></item><item><title>Enabling the AWS EFS Operator on ROSA</title><link>https://mobb.ninja/docs/rosa/aws-efs-operator-on-rosa/</link><pubDate>Wed, 14 Sep 2022 22:07:08 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/aws-efs-operator-on-rosa/</guid><description>The Amazon Web Services Elastic File System (AWS EFS) is a Network File System (NFS) that can be provisioned on Red Hat OpenShift Service on AWS clusters. AWS also provides and supports a CSI EFS Driver to be used with Kubernetes that allows Kubernetes workloads to leverage this shared file storage.
This is a guide to quickly enable the EFS Operator on ROSA to
See here for the official ROSA documentation.</description></item><item><title>Federating System and User metrics to S3 in Red Hat OpenShift for AWS</title><link>https://mobb.ninja/docs/rosa/federated-metrics/</link><pubDate>Wed, 14 Sep 2022 22:07:08 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/federated-metrics/</guid><description>Paul Czarkowski
06/07/2021
This guide walks through setting up federating Prometheus metrics to S3 storage.
ToDo - Add Authorization in front of Thanos APIs
Prerequisites A ROSA cluster deployed with STS aws CLI Set up environment Create environment variables
export CLUSTER_NAME=my-cluster export S3_BUCKET=my-thanos-bucket export REGION=us-east-2 export NAMESPACE=federated-metrics export SA=aws-prometheus-proxy export SCRATCH_DIR=/tmp/scratch export OIDC_PROVIDER=$(oc get authentication.config.openshift.io cluster -o json | jq -r .spec.serviceAccountIssuer| sed -e &amp;#34;s/^https:\/\///&amp;#34;) export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text) export AWS_PAGER=&amp;#34;&amp;#34; rm -rf $SCRATCH_DIR mkdir -p $SCRATCH_DIR Create namespace</description></item><item><title>Using AWS Controllers for Kubernetes (ACK) on ROSA</title><link>https://mobb.ninja/docs/rosa/ack/</link><pubDate>Wed, 14 Sep 2022 22:07:08 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/ack/</guid><description>Updated: 06/02/2022 by Paul Czarkowski
AWS Controllers for Kubernetes (ACK) lets you define and use AWS service resources directly from Kubernetes. With ACK, you can take advantage of AWS-managed services for your Kubernetes applications without needing to define resources outside of the cluster or run services that provide supporting capabilities like databases or message queues within the cluster.
ROSA clusters have a set of the ACK controllers in Operator Hub which makes it relatively easy to get started and use it.</description></item><item><title>Configuring the Cluster Log Forwarder for CloudWatch Logs using Vector</title><link>https://mobb.ninja/docs/rosa/clf-cloudwatch-vector/</link><pubDate>Fri, 21 Oct 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/clf-cloudwatch-vector/</guid><description>Author: Thatcher Hubbard
This guide shows how to deploy the Cluster Log Forwarder operator and configure it to use the Vector logging agent to forward logs to CloudWatch.
Vector will replaced FluentD as the default logging agent used by the Openshift Logging Operator when version 5.6 is released in Q4 2022. Version 5.5.3 of the operator can enable Vector by configuring it in the ClusterLogging resource.
Version 5.5.3 of the operator does not support passing an STS role to Vector, but version 5.</description></item><item><title>Dynamic Certificates for ROSA Custom Domain</title><link>https://mobb.ninja/docs/rosa/dynamic-certificates/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/dynamic-certificates/</guid><description>last edited 11 Oct 2022
There may be situations when you prefer not to use wild-card certificates. This ROSA guide talks about certificate management with cert-manager and letsencrypt, to dynamically issue certificates to routes created on a custom domain that&amp;rsquo;s hosted on AWS Route53.
Prerequisites Set up environment Prepare AWS Account Set up cert-manager Create the Issuer and the Certficiate Configure Certificate Requestor Create the Certificate, which will later be used by the Custom Domain.</description></item><item><title>Configure a load balancer service to use a static public IP</title><link>https://mobb.ninja/docs/rosa/static-ip-load-balancer/</link><pubDate>Wed, 05 Oct 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/static-ip-load-balancer/</guid><description>Michael McNeill
5 October 2022
This guide demonstrates how to create and assign a static public IP address to an OpenShift service in Azure Red Hat OpenShift (ARO). By default, the public IP address assigned to an OpenShift service with a type of LoadBalancer created by an ARO cluster is only valid for the lifespan of that resource. If you delete the OpenShift service, the associated load balancer and IP address are also deleted.</description></item><item><title>Verify Permissions for ROSA STS Deployment</title><link>https://mobb.ninja/docs/rosa/verify-permissions/</link><pubDate>Tue, 04 Oct 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/verify-permissions/</guid><description>Tyler Stacey
Last updated 4 Oct 2022
To proceed with the deployment of a ROSA cluster, an account must support the required roles and permissions. AWS Service Control Policies (SCPs) cannot block the API calls made by the installer or operator roles.
Details about the IAM resources required for an STS-enabled installation of ROSA can be found here: https://docs.openshift.com/rosa/rosa_architecture/rosa-sts-about-iam-resources.html
This guide is validated for ROSA v4.11.X.
Prerequisites AWS CLI ROSA CLI v1.</description></item><item><title>STS OIDC in ROSA : How it works!</title><link>https://mobb.ninja/docs/rosa/sts-oidc-flow/</link><pubDate>Sat, 01 Oct 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/sts-oidc-flow/</guid><description>If you prefer a more visual medium, you can watch this video on YouTube.
This short video talks about how the STS OIDC flow work in ROSA (Red Hat OpenShift Service on AWS).</description></item><item><title>Security Reference Architecture for ROSA</title><link>https://mobb.ninja/docs/rosa/security-ra/</link><pubDate>Fri, 30 Sep 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/security-ra/</guid><description>Tyler Stacey
The Security Reference Architecture for ROSA is a set of guidelines for deploying Red Hat OpenShift on AWS (ROSA) clusters to support high-security production workloads that align with Red Hat and AWS best practices.
This overall architectural guidance compliments detailed, specific recommendations for AWS services and Red Hat OpenShift Container Platform.
The Security Reference Architecture (SRA) for ROSA is a living document and is updated periodically based on new feature releases, customer feedback and evolving security best practices.</description></item><item><title>Integrating ROSA and ASEA Landing Zones</title><link>https://mobb.ninja/docs/rosa/rosa-asea-landing-zone/</link><pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate><guid>https://mobb.ninja/docs/rosa/rosa-asea-landing-zone/</guid><description>Integrating Red Hat OpenShift Service on AWS (ROSA) and AWS Secure Environment Accelerator (ASEA) Landing Zones Tyler Stacey
Last updated 28 Sep 2022
The AWS Secure Environment Accelerator (ASEA) is a tool developed and designed by AWS to help deploy and operate a secure landing zone on AWS. ASEA creates core management and operations accounts, configures networking, identity services, cloud security services, and centralized logging and alerting. In this post, you will learn how to deploy Red Hat OpenShift Service on AWS (ROSA) in an ASEA environment.</description></item></channel></rss>